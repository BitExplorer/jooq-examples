/*
 * This file is generated by jOOQ.
 */
package com.tabuyos.jooq.examples.generate.code.model.tables.records;


import com.tabuyos.jooq.examples.generate.code.model.tables.User;
import com.tabuyos.jooq.examples.generate.code.model.tables.interfaces.IUser;

import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "user",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_user_PRIMARY", columnNames = { "id" })
    }
)
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record5<Integer, String, Integer, Integer, LocalDateTime>, IUser {

    private static final long serialVersionUID = 1313758665;

    /**
     * Setter for <code>tabuyos.user.id</code>. user id
     */
    @Override
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>tabuyos.user.id</code>. user id
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 10)
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>tabuyos.user.name</code>. user name
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tabuyos.user.name</code>. user name
     */
    @Column(name = "name", nullable = false, length = 20)
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tabuyos.user.age</code>. user age
     */
    @Override
    public void setAge(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>tabuyos.user.age</code>. user age
     */
    @Column(name = "age", precision = 10)
    @Override
    public Integer getAge() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>tabuyos.user.gender</code>. user gender
     */
    @Override
    public void setGender(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>tabuyos.user.gender</code>. user gender
     */
    @Column(name = "gender", precision = 10)
    @Override
    public Integer getGender() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>tabuyos.user.birthday</code>.
     */
    @Override
    public void setBirthday(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>tabuyos.user.birthday</code>.
     */
    @Column(name = "birthday", nullable = false)
    @Override
    public LocalDateTime getBirthday() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Integer, Integer, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return User.USER.AGE;
    }

    @Override
    public Field<Integer> field4() {
        return User.USER.GENDER;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return User.USER.BIRTHDAY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getAge();
    }

    @Override
    public Integer component4() {
        return getGender();
    }

    @Override
    public LocalDateTime component5() {
        return getBirthday();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getAge();
    }

    @Override
    public Integer value4() {
        return getGender();
    }

    @Override
    public LocalDateTime value5() {
        return getBirthday();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value3(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public UserRecord value4(Integer value) {
        setGender(value);
        return this;
    }

    @Override
    public UserRecord value5(LocalDateTime value) {
        setBirthday(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, Integer value3, Integer value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUser from) {
        setId(from.getId());
        setName(from.getName());
        setAge(from.getAge());
        setGender(from.getGender());
        setBirthday(from.getBirthday());
    }

    @Override
    public <E extends IUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String name, Integer age, Integer gender, LocalDateTime birthday) {
        super(User.USER);

        setId(id);
        setName(name);
        setAge(age);
        setGender(gender);
        setBirthday(birthday);
    }
}
