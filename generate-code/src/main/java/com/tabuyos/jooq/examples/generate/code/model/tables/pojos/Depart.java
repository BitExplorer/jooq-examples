/*
 * This file is generated by jOOQ.
 */
package com.tabuyos.jooq.examples.generate.code.model.tables.pojos;


import com.tabuyos.jooq.examples.generate.code.model.tables.interfaces.IDepart;

import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "depart",
    schema = "tabuyos",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_depart_PRIMARY", columnNames = { "id" })
    }
)
public class Depart implements IDepart {

    private static final long serialVersionUID = -174942977;

    private Integer       id;
    private String        name;
    private Integer       age;
    private Integer       local;
    private LocalDateTime createTime;

    public Depart() {}

    public Depart(IDepart value) {
        this.id = value.getId();
        this.name = value.getName();
        this.age = value.getAge();
        this.local = value.getLocal();
        this.createTime = value.getCreateTime();
    }

    public Depart(
        Integer       id,
        String        name,
        Integer       age,
        Integer       local,
        LocalDateTime createTime
    ) {
        this.id = id;
        this.name = name;
        this.age = age;
        this.local = local;
        this.createTime = createTime;
    }

    /**
     * Getter for <code>tabuyos.depart.id</code>. user id
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 10)
    @Override
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>tabuyos.depart.id</code>. user id
     */
    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>tabuyos.depart.name</code>. user name
     */
    @Column(name = "name", nullable = false, length = 20)
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>tabuyos.depart.name</code>. user name
     */
    @Override
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>tabuyos.depart.age</code>. user age
     */
    @Column(name = "age", precision = 10)
    @Override
    public Integer getAge() {
        return this.age;
    }

    /**
     * Setter for <code>tabuyos.depart.age</code>. user age
     */
    @Override
    public void setAge(Integer age) {
        this.age = age;
    }

    /**
     * Getter for <code>tabuyos.depart.local</code>. user gender
     */
    @Column(name = "local", precision = 10)
    @Override
    public Integer getLocal() {
        return this.local;
    }

    /**
     * Setter for <code>tabuyos.depart.local</code>. user gender
     */
    @Override
    public void setLocal(Integer local) {
        this.local = local;
    }

    /**
     * Getter for <code>tabuyos.depart.create_time</code>.
     */
    @Column(name = "create_time", nullable = false)
    @Override
    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    /**
     * Setter for <code>tabuyos.depart.create_time</code>.
     */
    @Override
    public void setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Depart (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(age);
        sb.append(", ").append(local);
        sb.append(", ").append(createTime);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDepart from) {
        setId(from.getId());
        setName(from.getName());
        setAge(from.getAge());
        setLocal(from.getLocal());
        setCreateTime(from.getCreateTime());
    }

    @Override
    public <E extends IDepart> E into(E into) {
        into.from(this);
        return into;
    }
}
