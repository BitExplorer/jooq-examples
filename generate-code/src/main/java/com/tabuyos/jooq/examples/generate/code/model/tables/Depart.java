/*
 * This file is generated by jOOQ.
 */
package com.tabuyos.jooq.examples.generate.code.model.tables;


import com.tabuyos.jooq.examples.generate.code.model.Keys;
import com.tabuyos.jooq.examples.generate.code.model.Tabuyos;
import com.tabuyos.jooq.examples.generate.code.model.tables.records.DepartRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Depart extends TableImpl<DepartRecord> {

    private static final long serialVersionUID = 642030942;

    /**
     * The reference instance of <code>tabuyos.depart</code>
     */
    public static final Depart DEPART = new Depart();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DepartRecord> getRecordType() {
        return DepartRecord.class;
    }

    /**
     * The column <code>tabuyos.depart.id</code>. user id
     */
    public final TableField<DepartRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "user id");

    /**
     * The column <code>tabuyos.depart.name</code>. user name
     */
    public final TableField<DepartRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(20).nullable(false), this, "user name");

    /**
     * The column <code>tabuyos.depart.age</code>. user age
     */
    public final TableField<DepartRecord, Integer> AGE = createField(DSL.name("age"), SQLDataType.INTEGER.defaultValue(DSL.field("NULL", SQLDataType.INTEGER)), this, "user age");

    /**
     * The column <code>tabuyos.depart.local</code>. user gender
     */
    public final TableField<DepartRecord, Integer> LOCAL = createField(DSL.name("local"), SQLDataType.INTEGER.defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "user gender");

    /**
     * The column <code>tabuyos.depart.create_time</code>.
     */
    public final TableField<DepartRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("current_timestamp()", SQLDataType.LOCALDATETIME)), this, "");

    private Depart(Name alias, Table<DepartRecord> aliased) {
        this(alias, aliased, null);
    }

    private Depart(Name alias, Table<DepartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>tabuyos.depart</code> table reference
     */
    public Depart(String alias) {
        this(DSL.name(alias), DEPART);
    }

    /**
     * Create an aliased <code>tabuyos.depart</code> table reference
     */
    public Depart(Name alias) {
        this(alias, DEPART);
    }

    /**
     * Create a <code>tabuyos.depart</code> table reference
     */
    public Depart() {
        this(DSL.name("depart"), null);
    }

    public <O extends Record> Depart(Table<O> child, ForeignKey<O, DepartRecord> key) {
        super(child, key, DEPART);
    }

    @Override
    public Schema getSchema() {
        return Tabuyos.TABUYOS;
    }

    @Override
    public Identity<DepartRecord, Integer> getIdentity() {
        return (Identity<DepartRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<DepartRecord> getPrimaryKey() {
        return Keys.KEY_DEPART_PRIMARY;
    }

    @Override
    public List<UniqueKey<DepartRecord>> getKeys() {
        return Arrays.<UniqueKey<DepartRecord>>asList(Keys.KEY_DEPART_PRIMARY);
    }

    @Override
    public Depart as(String alias) {
        return new Depart(DSL.name(alias), this);
    }

    @Override
    public Depart as(Name alias) {
        return new Depart(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Depart rename(String name) {
        return new Depart(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Depart rename(Name name) {
        return new Depart(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
