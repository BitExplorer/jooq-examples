/*
 * This file is generated by jOOQ.
 */
package com.tabuyos.jooq.examples.generate.code.model.tables.records;


import com.tabuyos.jooq.examples.generate.code.model.tables.Depart;
import com.tabuyos.jooq.examples.generate.code.model.tables.interfaces.IDepart;

import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "depart",
    schema = "tabuyos",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_depart_PRIMARY", columnNames = { "id" })
    }
)
public class DepartRecord extends UpdatableRecordImpl<DepartRecord> implements Record5<Integer, String, Integer, Integer, LocalDateTime>, IDepart {

    private static final long serialVersionUID = 1662567226;

    /**
     * Setter for <code>tabuyos.depart.id</code>. user id
     */
    @Override
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>tabuyos.depart.id</code>. user id
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 10)
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>tabuyos.depart.name</code>. user name
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tabuyos.depart.name</code>. user name
     */
    @Column(name = "name", nullable = false, length = 20)
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tabuyos.depart.age</code>. user age
     */
    @Override
    public void setAge(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>tabuyos.depart.age</code>. user age
     */
    @Column(name = "age", precision = 10)
    @Override
    public Integer getAge() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>tabuyos.depart.local</code>. user gender
     */
    @Override
    public void setLocal(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>tabuyos.depart.local</code>. user gender
     */
    @Column(name = "local", precision = 10)
    @Override
    public Integer getLocal() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>tabuyos.depart.create_time</code>.
     */
    @Override
    public void setCreateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>tabuyos.depart.create_time</code>.
     */
    @Column(name = "create_time", nullable = false)
    @Override
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Integer, Integer, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Depart.DEPART.ID;
    }

    @Override
    public Field<String> field2() {
        return Depart.DEPART.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Depart.DEPART.AGE;
    }

    @Override
    public Field<Integer> field4() {
        return Depart.DEPART.LOCAL;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Depart.DEPART.CREATE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getAge();
    }

    @Override
    public Integer component4() {
        return getLocal();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getAge();
    }

    @Override
    public Integer value4() {
        return getLocal();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public DepartRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DepartRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public DepartRecord value3(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public DepartRecord value4(Integer value) {
        setLocal(value);
        return this;
    }

    @Override
    public DepartRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public DepartRecord values(Integer value1, String value2, Integer value3, Integer value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDepart from) {
        setId(from.getId());
        setName(from.getName());
        setAge(from.getAge());
        setLocal(from.getLocal());
        setCreateTime(from.getCreateTime());
    }

    @Override
    public <E extends IDepart> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DepartRecord
     */
    public DepartRecord() {
        super(Depart.DEPART);
    }

    /**
     * Create a detached, initialised DepartRecord
     */
    public DepartRecord(Integer id, String name, Integer age, Integer local, LocalDateTime createTime) {
        super(Depart.DEPART);

        setId(id);
        setName(name);
        setAge(age);
        setLocal(local);
        setCreateTime(createTime);
    }
}
